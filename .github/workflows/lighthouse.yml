name: Lighthouse CI
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Wait for Vercel Preview
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request.number;
            
            // Wait for deployment
            await new Promise(resolve => setTimeout(resolve, 60000));
            
            const deployments = await github.rest.repos.listDeployments({
              owner,
              repo,
              ref: context.payload.pull_request.head.ref
            });
            
            if (deployments.data.length > 0) {
              const deployment = deployments.data[0];
              const statuses = await github.rest.repos.listDeploymentStatuses({
                owner,
                repo,
                deployment_id: deployment.id
              });
              
              if (statuses.data.length > 0) {
                const url = statuses.data[0].target_url;
                core.exportVariable('PREVIEW_URL', url);
              }
            }
      
      - name: Run Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ env.PREVIEW_URL }}
            ${{ env.PREVIEW_URL }}/ozellikler
            ${{ env.PREVIEW_URL }}/fiyatlandirma
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './lighthouserc.json'
          
      - name: Comment results
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('.lighthouseci/manifest.json', 'utf8'));
            
            let comment = '## 🔦 Lighthouse Results\n\n';
            
            results.forEach(result => {
              const { url, summary } = result;
              const scores = {
                Performance: Math.round(summary.performance * 100),
                Accessibility: Math.round(summary.accessibility * 100),
                'Best Practices': Math.round(summary['best-practices'] * 100),
                SEO: Math.round(summary.seo * 100)
              };
              
              comment += `### ${url}\n`;
              Object.entries(scores).forEach(([key, value]) => {
                const emoji = value >= 95 ? '✅' : '❌';
                comment += `- ${emoji} ${key}: ${value}/100\n`;
              });
              comment += '\n';
            });
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });
